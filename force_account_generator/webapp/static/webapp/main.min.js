const previewNode=document.getElementById("dropzone-template");previewNode.id="";const previewTemplate=previewNode.parentNode.innerHTML;previewNode.parentNode.removeChild(previewNode);const dropzone=new Dropzone("#mydropzone",{maxFiles:1,init:function(){this.hiddenFileInput.removeAttribute("multiple"),this.on("processing",onProcessing),this.on("uploadprogress",onUploadProgress),this.on("maxfilesexceeded",onMaxFilesExceeded),this.on("success",onUploadSuccess),this.on("sending",onSending),this.on("error",onUploadError)},paramName:"docfile",createImageThumbnails:!1,acceptedFiles:".xlsx",previewTemplate:previewTemplate,previewsContainer:"#upload-status"}),appData={fileAdded:!1,uploading:!1,fileBytes:0,bytesSent:0,fileSizeUnit:"KB",error:null,stage:0,currentPage:0,totalPages:1,taskId:null,get fileSize(){return this._getSize(this.fileBytes)},get transferredSize(){return this._getSize(Math.min(this.bytesSent,this.fileBytes))},get transferredPercent(){return Math.min(this.bytesSent/this.fileBytes*100,100).toString()+"%"},_getSize(e){return"KB"===this.fileSizeUnit?(Math.round(e/1e3*100)/100).toFixed(2):(Math.round(e/1e6*100)/100).toFixed(2)},reset(){dropzone.removeAllFiles(),this.error=null,this.fileAdded=!1,this.uploading=!1,this.fileBytes=0,this.bytesSent=0,this.fileSizeUnit="KB",this.stage=0,this.currentPage=0,this.totalPages=1,this.taskId=null},setUploading({fileBytes:e}){this.fileAdded=!0,this.uploading=!0,this.error=null,this.fileBytes=e,this.fileSizeUnit=e/1e3>=1e3?"MB":"KB"},setStage(e){this.stage=e,this.stage>=3&&this.currentPage!==this.totalPages&&(this.currentPage=this.totalPages)},runDemo(){this.reset();const e={name:"demo.xlsx",size:15e5};e.status=Dropzone.SUCCESS,e.accepted=!0,dropzone.files.push(e),dropzone.emit("addedfile",e),dropzone.emit("processing",e);const t=setInterval(()=>{this.bytesSent+=5e4,this.bytesSent>=e.size&&(clearInterval(t),sendDemoRequest(e))},100)}};function onProcessing(e){window.dispatchEvent(new CustomEvent("processingupload",{detail:{fileBytes:e.size}}))}function onUploadProgress(e,t,s){window.dispatchEvent(new CustomEvent("uploadprogress",{detail:{progress:t,bytesSent:s}}))}function onUploadSuccess(e,t){if(t.task_id)return window.dispatchEvent(new CustomEvent("uploadsuccess",{detail:{taskId:t.task_id}})),initCeleryProgress(t.task_id);dispatchError("No response from the server. Please try again in a little bit.")}function onUploadError(e,t){this.removeAllFiles(!0),dispatchError(t)}function onMaxFilesExceeded(e){this.removeAllFiles(!0),this.addFile(e)}function onSending(e,t,s){const i=document.getElementById("daily_sheets").checked;s.append("daily_sheets",i)}function initCeleryProgress(e){const t="/celery-progress/"+e;CeleryProgressBar.initProgressBar(t,{onProgress:onGenerateProgress,onSuccess:onGenerateSuccess,onError:onGenerateError})}function onGenerateProgress(e,t,{description:s}){if(s&&(dispatchSetStage(s.stage),2===s.stage)){const e=s.stage_progress,t=s.stage_total;window.dispatchEvent(new CustomEvent("pdfprogress",{detail:{current:e,total:t}}))}}function onGenerateSuccess(e,t,s){dispatchSetStage(4)}function onGenerateError(e,t,s){dispatchError("An error occurred while processing the Excel file. Please make sure it is a valid template.")}function dispatchError(e){window.dispatchEvent(new CustomEvent("error",{detail:{error:e}}))}function dispatchSetStage(e){window.dispatchEvent(new CustomEvent("setstage",{detail:{stage:e}}))}function sendDemoRequest(e){fetch("/demo").then(e=>e.json()).then(t=>{dropzone.emit("success",e,t)})}